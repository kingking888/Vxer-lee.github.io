[{"title":"iOS应用逆向与安全-WhatsApp防撤回开发","url":"/iOS应用逆向与安全-WhatsApp分析.html","content":"\n>庆总的《iOS应用逆向与安全》看得也差不多了，根据最后一张，自己也分析下最新版本的WhatsApp软件的分析。\n>\n>版本：2.20.51\n\n## 盗墓准备：砸壳\n\n哈哈😸，最近可能鬼吹灯看多了，很喜欢吧逆向流程分为，盗墓准备-分经定穴-起尸开馆-盗墓。\n\n砸壳的方式现在真的五花八门，有各种工具来砸壳，其中比较好用有名的是用庆总用Frida框架写的`frida-ios-dump`，其下载地址为https://github.com/AloneMonkey/frida-ios-dump.\n\n还有Lakr Aream大佬写的VS Code插件`iOSre Extension`，该插件包含很多功能，可以列出所有APP，可以动态调试、可以一键脱壳、加载文件系统、下载上传文件。具体使用的话，在VS Code中直接安装该插件即可。其github地址为https://github.com/Co2333/iOSreExtension \n\n我个人的话比较喜欢`CrackXI`，是在手机上的越狱应用，在Cydia中添加蚂蚁源，安装CrackXI后打开I在其AppList界面点击需要砸壳的APP，然后点击YES,Full IPA开始砸壳，真的很简单好用。\n\n\n\n- frida-ios-dump https://github.com/AloneMonkey/frida-ios-dump 作者：庆总\n- iOSre Extension https://github.com/Co2333/iOSreExtension 作者：Lakr Aream\n- CrackerXI https://apt.cydia.love/misc 作者：蚂蚁源\n\n\n\n`导出头文件：`\n\n```bash\n#将WhatsApp程序的头文件导出到Headers文件中.\nclass-dump WhatsApp.app -A -H -o ./Headers\n```\n\n`还原符号表:`\n\n```bash\n#先在Github上下载restore-symbol\ngit clone --recursive https://github.com/tobefuturer/restore-symbol.git\ncd restore-symbol\nmake\n#然后链接到系统Bin，方便使用\ncd /usr/local/bin\nln /User/lee/restore-symbol/restore-symbol restore-symbol\n#拷贝可执行文件、瘦身、恢复符号表\ncd /User/lee/Desktop/whatsapp\ncp WhatsApp.app/whatsApp ./whatsApp_decrypt && chmod 777 whatsApp_decrypt\nlipo whatsApp_decrypt -thin arm64 -o whatsApp && chmod 777 whatsApp\nrestore-symbol WhatsApp -o WhatsApp_With_Symbol\n#然后替换WhatsApp.app里面的可执行文件,再用mobiledevice 安装\nmobiledevice WhatsApp.app\n```\n![截屏2020-06-29下午10.36.40](iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8-WhatsApp%E5%88%86%E6%9E%90/%E6%88%AA%E5%B1%8F2020-06-29%E4%B8%8B%E5%8D%8810.36.40.png)\n.\n\n## 分金定穴：分析\n\n#### Reveal 查看UI层\n\n下载最新的Reveal，我这边目前最新的Reveal版本是26，然后配置下RevealServer，具体可以参考这一篇文章。\n\n[https://meilbn.com/2019/08/23/install-reveal2loader-on-jailbreak-device-ios12/#0x03_%E6%9B%B4%E6%96%B0_RevealServer-framework](https://meilbn.com/2019/08/23/install-reveal2loader-on-jailbreak-device-ios12/#0x03_更新_RevealServer-framework)\n\n启动WhatsApp并打开聊天对话框，然后用Reveal查看WhatsApp的消息控件，得知是WAMessaegContainerView类。\n![image-20200705213020250](iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8-WhatsApp%E5%88%86%E6%9E%90/image-20200705213020250.png)\n\n#### VSCode 查找切入点\n\nVSCode打开用class-dump出来的WhatsApp头文件，搜索`WAMessageContainerView`头文件然后找到可疑的方法，由于我们是要做长按消息然后弹出框里面加收藏的功能，所以找到一个可疑的方法`handleLongPressAtPoint`,字面意思就是长按\n\n![image-20200705214346733](iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8-WhatsApp%E5%88%86%E6%9E%90/image-20200705214346733.png)"},{"title":"你好博客","url":"/hello-blog.html","content":"\n博客创建于 2020年01月05号 ，主要用于记录学习、经验积累、技术文档分享。\n\n放几张4K壁纸图\n\n![壁纸1](hello-blog/bg1.jpg)\n\n![壁纸1](hello-blog/bg2.jpg)\n\n![壁纸1](hello-blog/bg3.jpg)\n\n\n\n"},{"title":"熬夜之干JS加密","url":"/熬夜之干JS加密.html","content":"# 熬夜之干JS加密\n\n朋友发了这么一段东西，然后和我说熬夜也要把它解出来  我：？？？？？？？？\n\n没错经过一番搜索后发现这是一段加密的JS代码。\n\n(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(![]+[])[+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+(![]+[])[+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\n\n\n\n这是一段Js代码，利用js引擎语法 运算符 优先级等特性，让代码看起来特别难懂复杂。\n\n> 首先要运用到的第一个知识就是js运算符的优先级，因为这么长一段运算看的人眼花，我们必须得先根据优先级分成n小段，然后再各个击破。优先级的排列如下表：\n\n　　\n\n\n\n#### 优先级从高到低：\n\n| 运算符                             | 说明                                                   |\n| ---------------------------------- | ------------------------------------------------------ |\n| .[ ] ( )                           | 字段访问、数组索引、函数调用和表达式分组               |\n| ++ -- - ~ ! delete new typeof void | 一元运算符、返回数据类型、对象创建、未定义的值         |\n| * / %                              | 相乘、相除、求余数                                     |\n| + - +                              | 相加、相减、字符串串联                                 |\n| << >> >>>                          | 移位                                                   |\n| < <= > >= instanceof               | 小于、小于或等于、大于、大于或等于、是否为特定类的实例 |\n| == != === !==                      | 相等、不相等、全等，不全等                             |\n| &                                  | 按位“与”                                               |\n| ^                                  | 按位“异或”                                             |\n| \\|                                 | 按位“或”                                               |\n| &&                                 | 逻辑“与”                                               |\n| \\|\\|                               | 逻辑“或”                                               |\n| ?:                                 | 条件运算                                               |\n| = *OP*=                            | 赋值、赋值运算（如 += 和 &=）                          |\n| ,                                  | 多个计算                                               |\n\n\n\n#### 代码拆分\n\n根据（）和[] 代码一共可以拆分成28段。\n\n其实这28段代表的就是 e9a699e6b8af3731e78bace7ab8b 个字节\n\n\n\n#### 举例第一段:\n\n(!![]+[])[!+[]+!+[]+!+[]]        把() 和 []分开来就是\n\n(!![]+[]).       等于  true\n\n[!+[]+!+[]+!+[]]   等于 3 \n\n然后合起来就是\"true\"[3] 意思就是 取\"true\"这个字符串 从0开始到第3个字符, 也就是e\n\n\n\n![image-20190803024505492](assets/image-20190803024505492.png)\n\n![image-20190803024531220](assets/image-20190803024531220.png)\n\n\n\n#### 举例第二段：\n\n第二段则是 !+[] 代表1    一共是 9个1相加\n\n!+[]    !+[]    !+[]   !+[]   !+[]   !+[]   !+[]   !+[]   !+[]  \n\n![image-20190803024927010](assets/image-20190803024927010.png)\n\n\n\n**所以第一段和第二段加起来就是e9,也就是那段e9a699e6b8af3731e78bace7ab8b 前两个字**\n\n\n\n**后面的段以此类推**\n\n```javascript\n//第一段\n(!![]+[])[!+[]+!+[]+!+[]]  \n+\n//第二段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]] \n+\n//第三段\n(![]+[])[+!+[]]\n+\n//第四段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第五段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第六段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第七段\n(!![]+[])[!+[]+!+[]+!+[]]\n+\n//第八段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第九段\n([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\n+\n//第十段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第十一段\n(![]+[])[+!+[]]\n+\n//第十二段\n(![]+[])[+[]]\n+\n//第十三段\n[!+[]+!+[]+!+[]]\n+\n//第十四段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第十五段\n[!+[]+!+[]+!+[]]\n+\n//第十六段\n[+!+[]]\n+\n//第十七段\n(!![]+[])[!+[]+!+[]+!+[]]\n+\n//第十八段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第十九段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第二十段\n([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\n+\n//第二十一段\n(![]+[])[+!+[]]\n+\n//第二十二段\n([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]\n+\n//第二十三段\n(!![]+[])[!+[]+!+[]+!+[]]\n+\n//第二十四段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第二十五段\n(![]+[])[+!+[]]\n+\n//第二十六段\n([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\n+\n//第二十七段\n[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n+\n//第二十八段\n([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\n\n\n```\n\n\n\n**python拟代码**\n\n```python\n#coding=utf8\nimport binascii\nimport sys\nreload(sys)\n\n#e9a699e6b8af3731e78bace7ab8b\n\n#(!![]+[])[!+[]+!+[]+!+[]]\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\nsub1 = 1<2\nsub1_end = str(sub1)[3] + str(9)\nprint sub1_end            #e9\n\n#(![]+[])[+!+[]]\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\nsub2 = 1>2\nsub2_end = str(sub2)[1] + str(6)\nprint sub2_end            #a6\n\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\nsub3 = 9\nsub3_end = str(sub3) + str(sub3)\nprint sub3_end           #99\n\n#(!![]+[])[!+[]+!+[]+!+[]]\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\nsub4 = 1<2\nsub4_end = str(sub4)[3] + str(6)\nprint sub4_end           #e6\n\n#([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\nsub5 = '[object Array Iterator]'\nsub5_end = sub5[2] + str(8)\nprint sub5_end           #b8\n\n#(![]+[])[+!+[]]\n#(![]+[])[+[]]\nsub6 = 1>2\nsub6_end = str(sub6)[1] + str(sub6).lower()[0]\nprint sub6_end           #af\n\n#[!+[]+!+[]+!+[]]\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]                \nsub7 = 3\nsub7_end = str(sub7) + str(7)\nprint sub7_end           #37\n\n#[!+[]+!+[]+!+[]]\n#[+!+[]]\nsub8 = 3\nsub8_end = str(sub8) + str(1)\nprint sub8_end           #31\n\n#(!![]+[])[!+[]+!+[]+!+[]]\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\nsub9 = 1<2\nsub9_end = str(sub9)[3] + str(7)\nprint sub9_end           #e7\n\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n#([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\nsub10 = '[object Array Iterator]'\nsub10_end = str(8) + sub10[2]\nprint sub10_end          #8b\n\n#(![]+[])[+!+[]]\n#([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]\nsub11 = 1>2\nsub11_end = str(sub11)[1] + '[object Array Iterator]'[5]\nprint sub11_end          #ac\n\n#(!![]+[])[!+[]+!+[]+!+[]]\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\nsub12 = 1<2\nsub12_end = str(sub12)[3] + str(7)\nprint sub12_end          #e7\n\n#(![]+[])[+!+[]]\n#([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\nsub13 = 1>2\nsub13_end = str(sub13)[1] + '[object Array Iterator]'[2]\nprint sub13_end          #ab\n\n#[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]\n#([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]\nsub14 = '[object Array Iterator]'\nsub14_end = str(8) + str(sub14)[2]\nprint sub14_end         #8b\n\nprint '----------------------------------------'\ndecodestr = sub1_end+sub2_end+sub3_end+sub4_end+sub5_end+sub6_end+sub7_end+sub8_end+sub9_end+sub10_end+sub11_end+sub12_end+sub13_end+sub14_end\nprint decodestr\nprint '========================================'\nno = binascii.a2b_hex(decodestr)\n\nprint no\n```\n\n\n\n最后的执行结果\n\nWTF ？？？？？ 这是有人在搞事情？\n\n![ssdd](熬夜之干JS加密/ssdd.png)\n\n\n\n\n\n\n"}]